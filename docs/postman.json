{
	"info": {
		"_postman_id": "0e5aa54a-c9a5-410c-9ccd-b2028abeb8c5",
		"name": "Ethereum JSON-RPC",
		"description": "A collection holding all the Ethereum JSIN RPC API calls",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "net",
			"item": [
				{
					"name": "version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"net_version\",\n\t\"params\":[],\n\t\"id\":67\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns the current network id.\r\n\r\n**Parameters**\r\n\r\nnone\r\n\r\n**Returns**\r\n\r\n`String` - The current network id.\r\n\r\n`\"1\"`: Ethereum Mainnet\r\n\r\n`\"2\"`: Morden Testnet (deprecated)\r\n\r\n`\"3\"`: Ropsten Testnet\r\n\r\n`\"4\"`: Rinkeby Testnet\r\n\r\n`\"42\"`: Kovan Testnet"
					},
					"response": []
				}
			]
		},
		{
			"name": "eth",
			"item": [
				{
					"name": "accounts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_accounts\",\n\t\"params\":[],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns a list of addresses owned by client.\r\n\r\n**Parameters**\r\n\r\nnone\r\n\r\n**Returns**\r\n\r\n`Array of DATA`, 20 Bytes - addresses owned by the client"
					},
					"response": []
				},
				{
					"name": "blockNumber",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_blockNumber\",\n\t\"params\":[],\n\t\"id\":83\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns the number of most recent block.\r\n\r\n**Parameters**\r\n\r\nnone\r\n\r\n**Returns**\r\n\r\n`QUANTITY` - integer of the current block number the client is on."
					},
					"response": []
				},
				{
					"name": "coinbase",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_coinbase\",\n\t\"params\":[],\n\t\"id\":64\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns the client coinbase address.\r\n\r\n**Parameters**\r\n\r\nnone\r\n\r\n**Returns**\r\n\r\n`DATA`, 20 bytes - the current coinbase address."
					},
					"response": []
				},
				{
					"name": "getBalance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getBalance\",\n\t\"params\":[\n\t\t\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\", \n\t\t\"latest\"\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns the balance of the account of given address.\r\n\r\n**Parameters**\r\n\r\n`DATA`, 20 Bytes - address to check for balance.\r\n`QUANTITY|TAG` - integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter\r\n\r\n```\r\nparams: [\r\n   ' 0x407d73d8a49eeb85d32cf465507dd71d507100c1',\r\n   'latest'\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\n`QUANTITY` - integer of the current balance in wei."
					},
					"response": []
				},
				{
					"name": "getBlockByHash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getBlockByHash\",\n\t\"params\":[\n\t\t\"0xad1328d13f833b8af722117afdc406a762033321df8e48c00cd372d462f48169\", \n\t\ttrue\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns information about a block by hash.\r\n\r\n**Parameters**\r\n\r\n`DATA`, 32 Bytes - Hash of a block.\r\n\r\n`Boolean` - If true it returns the full transaction objects, if false only the hashes of the transactions.\r\n\r\n```\r\nparams: [\r\n   '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331',\r\n   true\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\n`Object` - A block object, or null when no block was found:\r\n\r\n`number`: `QUANTITY` - the block number. null when its pending block.\r\n\r\n`hash`: `DATA`, 32 Bytes - hash of the block. `null` when its pending block.\r\n\r\n`parentHash`: `DATA`, 32 Bytes - hash of the parent block.\r\n\r\n`nonce`: `DATA`, 8 Bytes - hash of the generated proof-of-work. `null` when its pending block.\r\n\r\n`sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\r\n\r\n`logsBloom`: `DATA`, 256 Bytes - the bloom filter for the logs of the block. `null` when its pending block.\r\n\r\n`transactionsRoot`: `DATA`, 32 Bytes - the root of the transaction trie of the block.\r\n\r\n`stateRoot`: `DATA`, 32 Bytes - the root of the final state trie of the block.\r\n\r\n`receiptsRoot`: `DATA`, 32 Bytes - the root of the receipts trie of the block.\r\n\r\n`miner`: `DATA`, 20 Bytes - the address of the beneficiary to whom the mining rewards were given.\r\n\r\n`difficulty`: `QUANTITY` - integer of the difficulty for this block.\r\n\r\n`totalDifficulty`: `QUANTITY` - integer of the total difficulty of the chain until this block.\r\n\r\n`extraData`: `DATA` - the \"extra data\" field of this block.\r\n\r\n`size`: `QUANTITY` - integer the size of this block in bytes.\r\n\r\n`gasLimit`: `QUANTITY` - the maximum gas allowed in this block.\r\n\r\n`gasUsed`: `QUANTITY` - the total used gas by all transactions in this block.\r\n\r\n`timestamp`: `QUANTITY` - the unix timestamp for when the block was collated.\r\n\r\n`transactions`: `Array` - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.\r\n\r\n`uncles`: `Array` - Array of uncle hashes."
					},
					"response": []
				},
				{
					"name": "getBlockByNumber",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getBlockByNumber\",\n\t\"params\":[ \n\t\t\"0x1b4\", \n\t\ttrue\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns information about a block by block number.\r\n\r\n**Parameters**\r\n\r\n`QUANTITY|TAG` - integer of a block number, or the string `\"earliest\"`, `\"latest\"` or `\"pending\"`, as in the default block parameter.\r\n\r\n`Boolean` - If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.\r\n\r\n```\r\nparams: [\r\n   '0x1b4', // 436\r\n   true\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\nSee `eth_getBlockByHash`"
					},
					"response": []
				},
				{
					"name": "getBlockTransactionCountByHash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getBlockTransactionCountByHash\",\n\t\"params\":[\n\t\t\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns the number of transactions in a block from a block matching the given block hash.\r\n\r\n**Parameters**\r\n\r\n`DATA`, 32 Bytes - hash of a block\r\n\r\n```\r\nparams: [\r\n   '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238'\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\n`QUANTITY` - integer of the number of transactions in this block."
					},
					"response": []
				},
				{
					"name": "getBlockTransactionCountByNumber",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getBlockTransactionCountByNumber\",\n\t\"params\":[\n\t\t\"0x52A8CA\"\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns the number of transactions in a block matching the given block number.\r\n\r\n**Parameters**\r\n\r\n`QUANTITY|TAG` - integer of a block number, or the string `\"earliest\"`, `\"latest\"` or `\"pending\"`, as in the default block parameter.\r\n\r\n```\r\nparams: [\r\n   '0xe8', // 232\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\n`QUANTITY` - integer of the number of transactions in this block."
					},
					"response": []
				},
				{
					"name": "getTransactionCount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getTransactionCount\",\n\t\"params\":[\n\t\t\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n\t\t\"latest\"\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns the number of transactions sent from an address.\r\n\r\n**Parameters**\r\n\r\n`DATA`, 20 Bytes - address.\r\n\r\n`QUANTITY|TAG` - integer block number, or the string `\"latest\"`, `\"earliest\"` or `\"pending\"`, see the default block parameter\r\n\r\n```\r\nparams: [\r\n   '0x407d73d8a49eeb85d32cf465507dd71d507100c1',\r\n   'latest' // state at the latest block\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\n`QUANTITY` - integer of the number of transactions send from this address."
					},
					"response": []
				},
				{
					"name": "getTransactionByBlockHashAndIndex",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getTransactionByBlockHashAndIndex\",\n\t\"params\":[\n\t\t\"0x3c82bc62179602b67318c013c10f99011037c49cba84e31ffe6e465a21c521a7\", \n\t\t\"0x0\"\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns information about a transaction by block hash and transaction index position.\r\n\r\n**Parameters**\r\n\r\n`DATA`, 32 Bytes - hash of a block.\r\n\r\n`QUANTITY` - integer of the transaction index position.\r\n\r\n```\r\nparams: [\r\n   '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331',\r\n   '0x0' // 0\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\nSee `eth_getTransactionByHash`"
					},
					"response": []
				},
				{
					"name": "getTransactionByBlockNumberAndIndex",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\n\t\"params\":[\n\t\t\"0x52A96E\", \n\t\t\"0x1\"\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns information about a transaction by block number and transaction index position.\r\n\r\n**Parameters**\r\n\r\n`QUANTITY|TAG` - a block number, or the string `\"earliest\"`, `\"latest\"` or `\"pending\"`, as in the default block parameter.\r\n\r\n`QUANTITY` - the transaction index position.\r\n\r\n```\r\nparams: [\r\n   '0x29c', // 668\r\n   '0x0' // 0\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\nSee `eth_getTransactionByHash`"
					},
					"response": []
				},
				{
					"name": "getTransactionByHash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_getTransactionByHash\",\n\t\"params\":[\n\t\t\"0xb2fea9c4b24775af6990237aa90228e5e092c56bdaee74496992a53c208da1ee\"\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Returns the information about a transaction requested by transaction hash.\r\n\r\n**Parameters**\r\n\r\n`DATA`, 32 Bytes - hash of a transaction\r\n\r\n```\r\nparams: [\r\n   \"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\n`Object` - A transaction object, or null when no transaction was found:\r\n\r\n`hash`: `DATA`, 32 Bytes - hash of the transaction.\r\n\r\n`nonce`: `QUANTITY` - the number of transactions made by the sender prior to this one.\r\n\r\n`blockHash`: `DATA`, 32 Bytes - hash of the block where this transaction was in. `null` when its pending.\r\n\r\n`blockNumber`: `QUANTITY` - block number where this transaction was in. `null` when its pending.\r\n\r\n`transactionIndex`: `QUANTITY` - integer of the transactions index position in the block. `null` when its pending.\r\n\r\n`from`: `DATA`, 20 Bytes - address of the sender.\r\n\r\n`to`: `DATA`, 20 Bytes - address of the receiver. `null` when its a contract creation transaction.\r\n\r\n`value`: `QUANTITY` - value transferred in Wei.\r\n\r\n`gasPrice`: `QUANTITY` - gas price provided by the sender in Wei.\r\n\r\n`gas`: `QUANTITY` - gas provided by the sender.\r\n\r\n`input`: `DATA` - the data send along with the transaction."
					},
					"response": []
				},
				{
					"name": "sendRawTransaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_sendRawTransaction\",\n\t\"params\":[\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Creates new message call transaction or a contract creation for signed transactions.\r\n\r\n**Parameters**\r\n\r\n`DATA`, The signed transaction data.\r\n\r\n```\r\nparams: [\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"]\r\n```\r\n\r\n**Returns**\r\n\r\n`DATA`, 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available.\r\n\r\nUse `eth_getTransactionReceipt` to get the contract address, after the transaction was mined, when you created a contract."
					},
					"response": []
				},
				{
					"name": "sendTransaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_sendTransaction\",\n\t\"params\":[{\n\t\t\"from\": \"0x199e933be97fd7f22ae488985943a42a1cc55815\",\n\t\t\"to\": \"0x01a174d6b6b8a505c8206af70aeefe02024d8904\",\n\t\t\"gas\": \"0x3e8\",\n\t\t\"gasPrice\": \"0x35a4e900\",\n\t\t\"value\": \"0x4563918244f40000\",\n\t\t\"data\": \"0x5472616e73666572656e6369612063727970746f2064657673\"\n\t}],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "Creates new message call transaction or a contract creation, if the data field contains code.\r\n\r\n**Parameters**\r\n\r\n`Object` - The transaction object\r\n\r\n`from`: `DATA`, 20 Bytes - The address the transaction is send from.\r\n\r\n`to`: `DATA`, 20 Bytes - (optional when creating new contract) The address the transaction is directed to.\r\n\r\n`gas`: `QUANTITY` - (optional, default: 90000) Integer of the gas provided for the transaction execution. It will return unused gas.\r\n\r\n`gasPrice`: `QUANTITY` - (optional, default: To-Be-Determined) Integer of the gasPrice used for each paid gas\r\n\r\n`value`: `QUANTITY` - (optional) Integer of the value sent with this transaction\r\n\r\n`data`: `DATA` - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. For details see Ethereum Contract ABI\r\n\r\n`nonce`: `QUANTITY` - (optional) Integer of a nonce. This allows to overwrite your own pending transactions that use the same nonce.\r\n\r\n```\r\nparams: [{\r\n  \"from\": \" 0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\r\n  \"to\": \" 0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\r\n  \"gas\": \"0x76c0\", // 30400\r\n  \"gasPrice\": \"0x9184e72a000\", // 10000000000000\r\n  \"value\": \"0x9184e72a\", // 2441406250\r\n  \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"\r\n}]\r\n```\r\n\r\n**Returns**\r\n\r\n`DATA`, 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available.\r\n\r\nUse `eth_getTransactionReceipt` to get the contract address, after the transaction was mined, when you created a contract."
					},
					"response": []
				},
				{
					"name": "sign",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"eth_sign\",\n\t\"params\":[\n\t\t\"0xb9e194bb2361ec61829db349ad7fc2866864381e\", \n\t\t\"0xdeadbeaf\"\n\t],\n\t\"id\":1\n}"
						},
						"url": {
							"raw": "{{ENVIRONMENT}}",
							"host": [
								"{{ENVIRONMENT}}"
							]
						},
						"description": "The sign method calculates an Ethereum specific signature with: `sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message)))`.\r\n\r\nBy adding a prefix to the message makes the calculated signature recognisable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data (e.g. transaction) and use the signature to impersonate the victim.\r\n\r\n**Note:** the address to sign with must be unlocked.\r\n\r\n**Parameters**\r\n\r\naccount, message\r\n\r\n`DATA`, 20 Bytes - address\r\n\r\n`DATA`, N Bytes - message to sign\r\n\r\n**Returns**\r\n\r\n`DATA`: Signature"
					},
					"response": []
				}
			]
		}
	]
}